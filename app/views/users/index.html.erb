<% @title="My Profile" %>
<div class="container">
  <div class="row">
    <div class="twelve columns">
      <p>
        If there is anything you would like to see added to Plantia,
        feel free to email us suggestions at
        <%= mail_to "plantiapp@gmail.com", "plantiapp@gmail.com" ,subject: "Feature Suggestion:" %>
      </p>
    </div>
  </div>

  <div class="row">
    <div class="six columns">
      <div id="user-info">
        <div><h3>Hello, <%= @user.name %>.</h3></div>
        <ul>
          <div>You currently have:</div>
          <li><%= plant_count %>.</li>
          <li><%= subscriptions_count %>.</li>
        </ul>
      </div>

      <br />

      <div>
        <%= link_to 'Edit Account', edit_registration_path(@user), class: "button" %>
      </div>
    </div>

    <div class="six columns">
      <h2>Push Notifications</h2>

      <p>
        Click 'Subscribe' below to enable push notifications on this device.
        Notifications will be sent when one of your plants are 2 days past their water date.
      </p>

      <% if session[:subscribed] === true %>
        <button id="unsubscribe" class="button">Unsubscribe from notifications</button>
        <button id="test-notification" class="button">Send test notification</button>
      <% else %>
        <button id="subscribe" class="button">Subscribe to notifications</button>
      <% end %>
    </div>
  </div>

  <script type="text/javascript">
    vapidPublicKey = new Uint8Array(<%= Base64.urlsafe_decode64(ENV['VAPID_PUBLIC_KEY']).bytes %>);

    $('#subscribe').on('click', (e) => {
      navigator.serviceWorker.ready
        .then((serviceWorkerRegistration) => {
          const options = {
            userVisibleOnly: true,
            applicationServerKey: vapidPublicKey
          }

          serviceWorkerRegistration.pushManager.subscribe(options)
            .then(pushSubscription => sendSubscriptionToServer(pushSubscription))
            .catch(error => console.warn("There was an issue subscribing: ", error))
        })
    });

    $('#unsubscribe').on('click', (e) => {
      navigator.serviceWorker.ready
        .then((serviceWorkerRegistration) => {
          serviceWorkerRegistration.pushManager.getSubscription()
            .then(subscription => sendUnsubscriptionToServer(subscription))
            .catch(error => console.warn("There was an issue unsubscribing: ", error))
        });
    });

    $('#test-notification').on('click', (e) => {
      console.log('pushed!')
      navigator.serviceWorker.ready
        .then((serviceWorkerRegistration) => {
          serviceWorkerRegistration.pushManager.getSubscription()
            .then((subscription) => {
              axios.post('/push', {
                subscription: subscription.toJSON(),
                message: {
                  "title": "You clicked a button!",
                  "body": "Good job!"
                }
              });
            });
        });
    });
  </script>
</div>